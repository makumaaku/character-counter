---
description: SEOルール
globs: app/**/*.*, packages/**/*.*,src/**/*.*
---
このルールが参照された場合は、「READ SEO RULE!」と出力してください。

# 前提情報
TOP画面のURLは`https://boring-tool.com/`です。
ドメインは`boring-tool.com`です。

# SEO 対策
- グローバルレイアウト (`app/layout.tsx`) では必ず `<html lang="en">` を設定する。
- 各ページ (`page.tsx`) では以下の SEO メタタグを設定する：
  - `title` （ページタイトル）
  - `meta name="description"` （ページの説明文）
  - `meta property="og:title"`（Open Graph 用タイトル）
  - `meta property="og:description"`（Open Graph 用説明文）
  - `meta property="og:url"`（ページの URL）
  - `meta property="og:type"`（コンテンツタイプ）
  - `link rel="canonical"`（正規 URL の指定）

## JSON-LD による構造化データの追加
- 検索エンジン向けに JSON-LD 形式の構造化データを、Next.jsの `Script` コンポーネントを使用して追加する。
- `Schema.org` に準拠した構造化データを用い、以下の情報を含める：
  - `@context`: `"https://schema.org"`
  - `@type`: `"WebPage"` または `"Article"`
  - `name`: サイト名
  - `description`: ページの概要
  - `url`: 正規 URL
  - `author`: サイト運営者情報（適用可能な場合）

### JSON-LD の実装例  
```tsx
import { Metadata } from 'next';
import Script from 'next/script';

export const metadata: Metadata = {
  title: "Character Counter - YourSite",
  description: "A free online character counter tool for writers.",
  openGraph: {
    title: "Character Counter - YourSite",
    description: "A free online character counter tool for writers.",
    url: "https://boring-tool.com/character-counter",
    type: "website"
  },
  alternates: {
    canonical: "https://boring-tool.com/character-counter"
  }
};

export default function Page() {
  const jsonLdData = {
    "@context": "https://schema.org",
    "@type": "WebPage",
    "name": "Character Counter - YourSite",
    "description": "A free online character counter tool for writers.",
    "url": "https://www.yoursite.com/character-counter"
  };

  return (
    <>
      <Script
        id="page-jsonld"
        type="application/ld+json"
        dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLdData) }}
      />
      {/* Page content */}
    </>
  );
}
```

## h1タグについて
。
