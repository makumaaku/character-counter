{
    "meta": {
      "title": "ページスピードチェッカー - ウェブサイトパフォーマンス分析ツール",
      "description": "無料のページスピードチェッカーツールで、ウェブサイトの読み込み速度、リソース使用状況を分析し、パフォーマンス改善の提案を取得できます。",
      "keywords": "ページスピードチェッカー, ウェブサイトパフォーマンス, 読み込み速度, パフォーマンス最適化, リソース分析"
    },
    "title": "ページスピードチェッカー",
    "description": "ウェブサイトの読み込み速度を分析し、パフォーマンス改善の提案を取得",
    "input": {
      "url": "ウェブサイトURL",
      "analyzeButton": "分析",
      "securityNote": "注意: ブラウザのセキュリティ制約により、正確な測定ができない場合があります。"
    },
    "results": {
      "loading": "分析中...",
      "loadTime": "ページ読み込み時間",
      "resources": "サイズ順リソース一覧",
      "suggestions": "パフォーマンス改善提案"
    },
    "error": {
      "invalidUrl": "有効なURLを入力してください（例：https://example.com）",
      "fetchFailed": "ページの分析に失敗しました。URLを確認して再試行してください。"
    },
    "status": {
      "noUrl": "分析するURLを入力してください"
    },
    "analysis": {
      "loadTime": {
        "slow": "⚠️ ページの読み込みに{{seconds}}秒かかっています。3秒以内を目指してください。",
        "medium": "⚠️ ページの初期接続時間は{{seconds}}秒です。1秒以内を目指すとユーザー体験が向上します。",
        "fast": "✅ ページの初期接続時間は{{milliseconds}}ミリ秒です。この点は良好です！"
      },
      "resources": {
        "totalSize": "📊 検出されたリソースの総サイズ: {{size}}",
        "largeImages": "⚠️ {{count}}個の大きな画像が見つかりました（200KB超）。以下のファイルの圧縮を検討してください：\n        {{files}}",
        "manyJs": "⚠️ {{count}}個のJavaScriptファイルが読み込まれています。以下のファイルの結合を検討してください：\n        {{files}}",
        "slowResources": "⚠️ {{count}}個のリソースの読み込みに500ms以上かかっています。以下のファイルの最適化を検討してください：\n        {{files}}",
        "others": "- その他..."
      },
      "security": "ℹ️ セキュリティ制約により、クロスオリジンのリソースの詳細情報を取得できません。より詳細な分析には、以下の方法を試してください：\n      1. Google PageSpeed Insightsで分析する: https://pagespeed.web.dev/\n      2. Chrome DevToolsのNetworkタブで分析する\n      3. Lighthouseを使用して詳細なパフォーマンスレポートを生成する",
      "imageOptimization": "📊 画像最適化: 画像は通常、ウェブページの総ダウンロードサイズの50-80%を占めています。{{domain}}のページで大きな画像を使用している場合：\n    - WebPやAVIF形式を使用すると、JPEGやPNGと比較して30-50%のファイルサイズ削減が可能です\n    - 画像の遅延読み込み（Lazy Loading）を実装して、初期表示に必要ない画像の読み込みを遅らせましょう\n    - 適切なサイズの画像を提供するために、srcset属性を使用してレスポンシブ画像を実装しましょう\n    - 画像圧縮ツール（TinyPNG、Squooshなど）を使用して、品質をほとんど損なわずに画像を圧縮しましょう",
      "javascriptOptimization": "⚡ JavaScript最適化: JavaScriptの実行はレンダリングをブロックし、ページの読み込み時間を大幅に増加させる可能性があります：\n    - コード分割（Code Splitting）を実装して、必要なJavaScriptのみを読み込むようにしましょう\n    - 重要でないスクリプトには defer または async 属性を使用しましょう\n    - 未使用のJavaScriptコードを削除するためにツリーシェイキングを活用しましょう\n    - 大きなサードパーティライブラリの使用を最小限に抑えましょう\n    - JavaScriptバンドルを最小化し、圧縮しましょう",
      "cssOptimization": "🎨 CSS最適化: レンダリングブロッキングリソースを減らすことでページの表示速度が向上します：\n    - クリティカルCSSをインライン化して、初期表示に必要なスタイルを即座に適用しましょう\n    - 未使用のCSSを削除して、CSSファイルのサイズを削減しましょう\n    - CSSファイルを最小化し、圧縮しましょう\n    - メディアクエリを使用して、デバイスに必要なCSSのみを読み込むようにしましょう\n    - CSSアニメーションよりもtransformとopacityプロパティを優先して使用しましょう",
      "fontOptimization": "📝 Webフォント最適化: カスタムフォントはページの読み込み時間に大きな影響を与えることがあります：\n    - font-display: swap を使用して、フォントの読み込み中にシステムフォントを表示しましょう\n    - 必要なフォントウェイトとスタイルのみを読み込みましょう\n    - WOFFまたはWOFF2フォント形式を使用して、ファイルサイズを削減しましょう\n    - 可能であれば、システムフォントを使用することを検討しましょう",
      "serverOptimization": "🌐 サーバー/ネットワーク最適化: サーバーのレスポンス時間とコンテンツ配信を改善しましょう：\n    - コンテンツ配信ネットワーク（CDN）を使用して、ユーザーに近い場所からコンテンツを配信しましょう\n    - HTTPキャッシュヘッダーを適切に設定して、リピートビジットでのパフォーマンスを向上させましょう\n    - GZIPまたはBrotli圧縮を有効にして、転送されるデータ量を削減しましょう\n    - HTTP/2またはHTTP/3を使用して、複数のリクエストを効率的に処理しましょう\n    - DNSプリフェッチ、プリコネクト、プリロードなどのリソースヒントを使用して、重要なリソースの読み込みを最適化しましょう",
      "mobileOptimization": "📱 モバイルパフォーマンス: モバイルユーザーは通常、より制約のあるデバイスとネットワーク条件で閲覧しています：\n    - モバイルファーストのアプローチを採用して、モバイルユーザー向けに最適化しましょう\n    - タッチターゲットのサイズを適切に設定して（少なくとも48x48ピクセル）、ユーザビリティを向上させましょう\n    - ビューポートを適切に設定して、モバイルデバイスでの表示を最適化しましょう\n    - 複雑なアニメーションや重いインタラクションを減らして、低スペックデバイスでのパフォーマンスを向上させましょう",
      "coreWebVitals": "📊 Core Web Vitals: Googleのランキング要因として重要な指標を改善しましょう：\n    - LCP（Largest Contentful Paint）: メインコンテンツの読み込み時間を2.5秒以内に抑えましょう\n    - FID（First Input Delay）: ユーザーの最初のインタラクションへの応答時間を100ミリ秒以内に抑えましょう\n    - CLS（Cumulative Layout Shift）: 視覚的な安定性を確保し、予期しないレイアウトシフトを防ぎましょう\n    - これらの指標を測定するために、Google PageSpeed InsightsやChrome User Experience Reportを使用しましょう",
      "recommendedTools": "🛠️ 推奨ツール: より詳細な分析と改善のために、以下のツールを使用することをお勧めします：\n    - Google PageSpeed Insights: 詳細なパフォーマンス分析とCore Web Vitalsの測定\n    - Lighthouse: ブラウザ内でのパフォーマンス、アクセシビリティ、SEO、ベストプラクティスの分析\n    - WebPageTest: 様々な条件下でのパフォーマンステスト\n    - Chrome DevTools: ネットワーク、パフォーマンス、メモリの詳細な分析\n    - GTmetrix: ページの読み込み時間と最適化の機会の分析",
      "tryPageSpeedInsights": "Google PageSpeed Insightsで分析する"
    }
  }