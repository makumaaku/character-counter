{
  "meta": {
    "title": "Page Speed Checker | Free SEO Analysis Tool for Instant Website Speed Testing",
    "description": "Measure web page loading speed with one click. Free online tool for SEO improvement and user experience enhancement. Compatible with both PC and mobile displays.",
    "keywords": "page speed checker, website performance, loading speed, performance optimization, resource analysis"
  },
  "title": "Page Speed Checker",
  "description": "Analyze website loading speed and get performance improvement suggestions",
  "seoText": {
    "overview": {
      "title": "Overview",
      "content": "Page Speed Checker is a free online tool that instantly measures page loading speed for any URL you specify.\n The 'display speed' that Google emphasizes is one of the important metrics directly linked to SEO evaluation. With this tool, you can quickly identify PC and mobile speed scores and improvement points at a glance. It features a simple, practical design that anyone can use, even without engineering knowledge."
    },
    "howTo": {
      "title": "How to Use",
      "steps": [
        {
          "title": "Enter URL",
          "description": "Input the URL of the web page you want to check for speed in the form."
        },
        {
          "title": "Click 'Start Check'",
          "description": "With one click, the analysis begins and results appear in about 5-10 seconds."
        },
        {
          "title": "Review Speed Scores and Improvement Advice",
          "description": "You can see scores for both PC and mobile, along with a list of elements contributing to load times."
        }
      ]
    },
    "testimonials": {
      "title": "User Testimonials",
      "users": [
        {
          "name": "Person A (SEO Consultant)",
          "comment": "\"I use this tool for client website improvement proposals. The scores and improvement areas are clearly shown, making report creation very efficient.\""
        },
        {
          "name": "Person B (Corporate Site Manager)",
          "comment": "\"I started using this after hearing that display speed affects SEO. It's convenient for internal sharing because it identifies issues for both smartphone and PC.\""
        },
        {
          "name": "Person C (WordPress Blogger)",
          "comment": "\"My blog was loading slowly, so I checked it with this tool. I was able to make improvements after understanding the need for image compression and lazy loading!\""
        }
      ]
    },
    "features": {
      "title": "Features & Benefits",
      "items": [
        {
          "title": "Clear Improvements with Google-Based Scoring",
          "description": "Page Speed Checker connects with Google's PageSpeed Insights API and generates reports based on scores that actually reflect in search evaluations. You'll get effective improvement guidelines for SEO optimization."
        },
        {
          "title": "Measure Speed for Both PC and Mobile Displays",
          "description": "In the mobile-first era, being able to compare speed scores for PC and mobile separately is a major advantage. This contributes to improving user experience and page circulation rates."
        },
        {
          "title": "Detailed Visualization of Display Elements",
          "description": "Images, CSS, JavaScript, fonts - see which elements are slowing down loading. The output is in a format that's easy to understand even for those not familiar with technology, making it easier to take action."
        },
        {
          "title": "No Registration, Free, and Ready to Use",
          "description": "No membership registration or app installation required. With its speedy design that completes analysis with just one click after entering a URL, it's ideal for daily checks."
        }
      ]
    },
    "faq": {
      "title": "FAQ",
      "questions": [
        {
          "question": "Q1. How is the score in this tool calculated?",
          "answer": "A. It's calculated based on evaluation items including Core Web Vitals metrics like LCP, FID, and CLS, using Google's PageSpeed Insights API as a foundation."
        },
        {
          "question": "Q2. Why are scores different between mobile and PC?",
          "answer": "A. This is because performance differs by device for the same page due to differences in communication speed, rendering engines, and other factors."
        },
        {
          "question": "Q3. What should I do if my score is poor?",
          "answer": "A. We recommend addressing issues based on the improvement suggestions displayed in the tool, such as optimizing images, lightening CSS and JavaScript, and implementing lazy loading."
        },
        {
          "question": "Q4. Can people other than site creators use it?",
          "answer": "A. Yes, it's designed so anyone can use it just by entering a URL, making it easily accessible for marketers and executives too."
        },
        {
          "question": "Q5. Is the analyzed data stored somewhere?",
          "answer": "A. No, the entered URL and results are not stored at all. They are obtained and displayed in real-time each time, ensuring your privacy is protected."
        }
      ]
    }
  },
  "input": {
    "url": "Website URL",
    "analyzeButton": "Analyze",
    "securityNote": "Note: Browser security restrictions may prevent accurate measurements."
  },
  "results": {
    "loading": "Analyzing...",
    "loadTime": "Page Load Time",
    "resources": "Top Resources by Size",
    "suggestions": "Performance Suggestions"
  },
  "error": {
    "invalidUrl": "Please enter a valid URL (e.g., https://example.com)",
    "fetchFailed": "Failed to analyze the page. Please check the URL and try again."
  },
  "status": {
    "noUrl": "Please enter a URL to analyze"
  },
  "analysis": {
    "loadTime": {
      "slow": "‚ö†Ô∏è Page loading took {{seconds}} seconds. Aim for under 3 seconds.",
      "medium": "‚ö†Ô∏è Initial connection time is {{seconds}} seconds. Aim for under 1 second for better user experience.",
      "fast": "‚úÖ Initial connection time is {{milliseconds}} milliseconds. This is good!"
    },
    "resources": {
      "totalSize": "üìä Total size of detected resources: {{size}}",
      "largeImages": "‚ö†Ô∏è Found {{count}} large images (over 200KB). Consider compressing the following files:\n        {{files}}",
      "manyJs": "‚ö†Ô∏è {{count}} JavaScript files are loaded. Consider combining the following files:\n        {{files}}",
      "slowResources": "‚ö†Ô∏è {{count}} resources took over 500ms to load. Consider optimizing the following files:\n        {{files}}",
      "others": "- Others..."
    },
    "security": "‚ÑπÔ∏è Due to security constraints, we cannot access detailed information about cross-origin resources. For a more detailed analysis, try:\n      1. Analyze with Google PageSpeed Insights: https://pagespeed.web.dev/\n      2. Analyze with Chrome DevTools Network tab\n      3. Generate a detailed performance report using Lighthouse",
    "imageOptimization": "üìä Image Optimization: Images typically account for 50-80% of a web page's total download size. If you're using large images on {{domain}} pages:\n    - Using WebP or AVIF formats can reduce file sizes by 30-50% compared to JPEG or PNG\n    - Implement lazy loading for images to delay loading images that aren't needed for initial display\n    - Implement responsive images using the srcset attribute to provide appropriately sized images\n    - Use image compression tools (like TinyPNG, Squoosh) to compress images with minimal quality loss",
    "javascriptOptimization": "‚ö° JavaScript Optimization: JavaScript execution can block rendering and significantly increase page load times:\n    - Implement code splitting to load only the JavaScript that's needed\n    - Use defer or async attributes for non-critical scripts\n    - Utilize tree shaking to remove unused JavaScript code\n    - Minimize use of large third-party libraries\n    - Minify and compress JavaScript bundles",
    "cssOptimization": "üé® CSS Optimization: Reducing render-blocking resources improves page display speed:\n    - Inline critical CSS to apply essential styles immediately for initial display\n    - Remove unused CSS to reduce CSS file size\n    - Minify and compress CSS files\n    - Use media queries to load only the CSS needed for the device\n    - Prefer using transform and opacity properties over CSS animations",
    "fontOptimization": "üìù Web Font Optimization: Custom fonts can significantly impact page load time:\n    - Use font-display: swap to show system fonts while loading custom fonts\n    - Load only the font weights and styles you need\n    - Use WOFF or WOFF2 font formats to reduce file size\n    - Consider using system fonts when possible",
    "serverOptimization": "üåê Server/Network Optimization: Improve server response time and content delivery:\n    - Use a Content Delivery Network (CDN) to serve content from locations closer to users\n    - Set proper HTTP cache headers to improve performance for repeat visits\n    - Enable GZIP or Brotli compression to reduce data transferred\n    - Use HTTP/2 or HTTP/3 to handle multiple requests efficiently\n    - Use resource hints like DNS prefetch, preconnect, and preload to optimize loading of critical resources",
    "mobileOptimization": "üì± Mobile Performance: Mobile users typically browse on more constrained devices and network conditions:\n    - Adopt a mobile-first approach to optimize for mobile users\n    - Set proper touch target sizes (at least 48x48 pixels) to improve usability\n    - Configure the viewport properly to optimize display on mobile devices\n    - Reduce complex animations and heavy interactions to improve performance on low-spec devices",
    "coreWebVitals": "üìä Core Web Vitals: Improve these metrics that are important ranking factors for Google:\n    - LCP (Largest Contentful Paint): Keep main content loading time under 2.5 seconds\n    - FID (First Input Delay): Keep response time to user's first interaction under 100ms\n    - CLS (Cumulative Layout Shift): Ensure visual stability and prevent unexpected layout shifts\n    - Use Google PageSpeed Insights and Chrome User Experience Report to measure these metrics",
    "recommendedTools": "üõ†Ô∏è Recommended Tools: For more detailed analysis and improvement, we recommend using these tools:\n    - Google PageSpeed Insights: Detailed performance analysis and Core Web Vitals measurement\n    - Lighthouse: In-browser analysis of performance, accessibility, SEO, and best practices\n    - WebPageTest: Performance testing under various conditions\n    - Chrome DevTools: Detailed analysis of network, performance, and memory\n    - GTmetrix: Analysis of page load time and optimization opportunities",
    "tryPageSpeedInsights": "Try Google PageSpeed Insights"
  }
}
